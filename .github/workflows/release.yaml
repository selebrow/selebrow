name: Release

on:
  push:
    tags:        
      - '**'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: selebrow/selebrow

permissions: {}

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Create Draft Release
        run: gh release create ${GITHUB_REF_NAME} --generate-notes --draft
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-binary:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    strategy:
      matrix:
        os: [darwin, windows, linux]
        arch: [amd64, arm64]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Build Binary
        env:
          CGO_ENABLED: "0"
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          make build
          gh release upload ${GITHUB_REF_NAME} bin/selebrow-${{ matrix.os }}-${{ matrix.arch }}#selebrow-${{ matrix.os }}-${{ matrix.arch }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: selebrow-${{ matrix.os }}-${{ matrix.arch }}
          path: bin/selebrow-*

  release-docker:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Build Binary
        env:
          CGO_ENABLED: "0"
          GOOS: linux
          GOARCH: amd64
        run: make build

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Image
        uses: docker/build-push-action@v6
        with:
          push: true
          context: .
          file: ./Dockerfile
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${GITHUB_REF_NAME}
