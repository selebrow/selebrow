name: Build

on:
  pull_request:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: selebrow/selebrow

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Lint
        uses: golangci/golangci-lint-action@v8
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          version: v2.1

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Test
        run: make test

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Build Binaries
        strategy:
          matrix:
            os: [darwin, windows, linux]
            arch: [amd64, arm64]
        run: GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} make build

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          path: bin/selebrow-*

      - name: Log in to the Container registry
        if: steps.check-base-update.outcome == 'success'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Image
        uses: docker/build-push-action@v6
        with:
          push: true
          context: .
          file: ./Dockerfile
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$(./scripts/slug.sh ${GITHUB_REF_NAME}-${GITHUB_SHA})
