// Code generated by mockery v2.52.3. DO NOT EDIT.

package mocks

import (
	pool "github.com/selebrow/selebrow/internal/browser/pool"
	mock "github.com/stretchr/testify/mock"
)

// CheckinFunc is an autogenerated mock type for the CheckinFunc type
type CheckinFunc struct {
	mock.Mock
}

type CheckinFunc_Expecter struct {
	mock *mock.Mock
}

func (_m *CheckinFunc) EXPECT() *CheckinFunc_Expecter {
	return &CheckinFunc_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: wd
func (_m *CheckinFunc) Execute(wd *pool.PooledBrowser) {
	_m.Called(wd)
}

// CheckinFunc_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type CheckinFunc_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//   - wd *pool.PooledBrowser
func (_e *CheckinFunc_Expecter) Execute(wd interface{}) *CheckinFunc_Execute_Call {
	return &CheckinFunc_Execute_Call{Call: _e.mock.On("Execute", wd)}
}

func (_c *CheckinFunc_Execute_Call) Run(run func(wd *pool.PooledBrowser)) *CheckinFunc_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*pool.PooledBrowser))
	})
	return _c
}

func (_c *CheckinFunc_Execute_Call) Return() *CheckinFunc_Execute_Call {
	_c.Call.Return()
	return _c
}

func (_c *CheckinFunc_Execute_Call) RunAndReturn(run func(*pool.PooledBrowser)) *CheckinFunc_Execute_Call {
	_c.Run(run)
	return _c
}

// NewCheckinFunc creates a new instance of CheckinFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCheckinFunc(t interface {
	mock.TestingT
	Cleanup(func())
}) *CheckinFunc {
	mock := &CheckinFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
